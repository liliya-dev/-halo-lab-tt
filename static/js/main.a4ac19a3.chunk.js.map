{"version":3,"sources":["constants.ts","helpers.ts","components/FileInput.tsx","components/FormInput.tsx","components/SubmitButton.tsx","components/TextArea.tsx","components/Form.tsx","components/Steps.tsx","App.tsx","index.tsx"],"names":["zeroStateValues","company","number","business","description","zeroStateErrors","showErrors","name","errors","values","errorsList","length","isNaN","FileInput","handleFiles","numberOfFiles","className","htmlFor","src","alt","type","id","multiple","onChange","FormInput","title","text","placeholder","inputClass","labelClass","optionClass","isRequired","error","errorClass","removeError","handleInputChanges","value","handleOnBlur","event","target","onBlur","SubmitButton","buttonClass","handleSubmit","onClick","TextArea","Form","useState","setValues","setErrors","setNumberOfFiles","newErrors","increaseNumber","files","preventDefault","Object","keys","forEach","key","every","err","console","log","Steps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4ac19a3.chunk.js","sourcesContent":["export const zeroStateValues = {\n  company: '',\n  number: '',\n  business: '',\n  description: '',\n};\n\nexport const zeroStateErrors = {\n  company: '',\n  number: '',\n  business: '',\n  description: '',\n};\n","/* eslint-disable no-restricted-globals */\nimport { ObjectIndex, Values } from './interfaces';\n\nexport const showErrors = (name: string, errors: ObjectIndex, values: Values) => {\n  let errorsList: ObjectIndex = { ...errors };\n\n  switch (name) {\n    case 'company':\n      break;\n    case 'number':\n      if (!values.number.length) {\n        errorsList = { ...errorsList, number: 'This field is required' };\n      } else if (+values.number > 99 || +values.number < 1 || isNaN(+values.number)) {\n        errorsList = { ...errorsList, number: 'Please enter number from 1 to 99' };\n      }\n\n      break;\n    case 'business':\n      if (!values.business.length) {\n        errorsList = { ...errorsList, business: 'This field is required' };\n      }\n\n      break;\n    case 'description':\n      if (!values.description.length) {\n        errorsList = { ...errorsList, description: 'This field is required' };\n      }\n\n      break;\n    default:\n  }\n\n  return errorsList;\n};\n","import React, { ChangeEvent } from 'react';\n\ninterface Props {\n  handleFiles: (event: ChangeEvent<HTMLInputElement>) => (void);\n  numberOfFiles: number;\n}\n\nexport const FileInput: React.FC<Props> = ({ handleFiles, numberOfFiles }) => {\n  return (\n    <div className=\"form__file file\">\n\n      <label htmlFor=\"file\" className=\"file__label\">\n        <img src=\"img/Folder.png\" alt=\"add folder\" className=\"file__img\" />\n        Add file as attachment\n        <input\n          type=\"file\"\n          className=\"file__input\"\n          id=\"file\"\n          name=\"file\"\n          multiple\n          onChange={handleFiles}\n        />\n      </label>\n      <p className=\"file__text\">\n        {\n          numberOfFiles === 0\n            ? 'Choose a file'\n            : `${numberOfFiles} files attached`\n        }\n      </p>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\n\ninterface Props {\n  title: string;\n  text: string;\n  placeholder: string;\n  inputClass: string;\n  type: string;\n  labelClass: string;\n  optionClass: string;\n  isRequired: boolean;\n  error: string;\n  errorClass: string;\n  removeError: (name: string) => (void);\n  handleInputChanges: (name: string, text: string) => (void);\n  value: string;\n  handleOnBlur: (name: string) => (void);\n}\n\nexport const FormInput: React.FC<Props> = ({\n  title, text, placeholder, inputClass, type,\n  labelClass, optionClass, isRequired, error,\n  errorClass, removeError, handleInputChanges,\n  value, handleOnBlur,\n}) => {\n  return (\n    <div className={optionClass}>\n      <label htmlFor={title} className={labelClass}>\n        {text}\n        {\n          isRequired && <span className=\"red\">*</span>\n        }\n      </label>\n      <input\n        value={value}\n        type={type}\n        placeholder={placeholder}\n        name={title}\n        id={title}\n        className={inputClass}\n        onChange={(event) => {\n          removeError(event.target.name);\n          handleInputChanges(title, event.target.value);\n        }}\n        onBlur={() => handleOnBlur(title)}\n      />\n      <p className={errorClass}>\n        {error}\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  buttonClass: string;\n  text: string;\n  handleSubmit: (event: React.FormEvent) => (void);\n}\n\nexport const SubmitButton: React.FC<Props> = ({ buttonClass, text, handleSubmit }) => {\n  return (\n    <button\n      type=\"submit\"\n      className={buttonClass}\n      onClick={(event) => handleSubmit(event)}\n    >\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  title: string;\n  text: string;\n  placeholder: string;\n  inputClass: string;\n  labelClass: string;\n  optionClass: string;\n  isRequired: boolean;\n  errorClass: string;\n  error: string;\n  removeError: (name: string) => (void);\n  handleInputChanges: (name: string, text: string) => (void);\n  value: string;\n  handleOnBlur: (name: string) => (void);\n}\n\nexport const TextArea: React.FC<Props> = ({\n  title, text, placeholder, inputClass, labelClass, optionClass,\n  isRequired, error, errorClass, removeError, handleInputChanges,\n  value, handleOnBlur,\n}) => {\n  return (\n    <div className={optionClass}>\n      <label htmlFor={title} className={labelClass}>\n        {text}\n        {\n          isRequired && <span className=\"red\">*</span>\n        }\n      </label>\n      <textarea\n        value={value}\n        placeholder={placeholder}\n        name={title}\n        id={title}\n        className={inputClass}\n        onChange={(event) => {\n          removeError(event.target.name);\n          handleInputChanges(title, event.target.value);\n        }}\n        onBlur={() => handleOnBlur(title)}\n      />\n      <p className={errorClass}>{error}</p>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState, ChangeEvent } from 'react';\nimport { zeroStateValues, zeroStateErrors } from '../constants';\nimport { showErrors } from '../helpers';\nimport { ObjectIndex } from '../interfaces';\nimport { FileInput } from './FileInput';\nimport { FormInput } from './FormInput';\nimport { SubmitButton } from './SubmitButton';\nimport { TextArea } from './TextArea';\n\nexport const Form = () => {\n  const [values, setValues] = useState(zeroStateValues);\n  const [errors, setErrors] = useState<ObjectIndex>(zeroStateErrors);\n  const [numberOfFiles, setNumberOfFiles] = useState(0);\n\n  const handleFiles = (event: ChangeEvent<HTMLInputElement>) => {\n    const increaseNumber = event.target.files?.length || 0;\n\n    setNumberOfFiles(numberOfFiles + increaseNumber);\n  };\n\n  const handleInputChanges = (name: string, text: string) => {\n    setValues({ ...values, [name]: text });\n  };\n\n  const handleOnBlur = (name: string) => {\n    const newErrors: ObjectIndex = showErrors(name, errors, values);\n\n    setErrors(newErrors);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    const newErrors: ObjectIndex = {};\n\n    event.preventDefault();\n    Object.keys(errors).forEach(key => {\n      newErrors[key] = showErrors(key, errors, values)[key];\n    });\n    const isError = Object.values(newErrors).every(err => err === '');\n\n    if (!isError) {\n      setErrors(newErrors);\n    } else {\n      console.log({ ...values, numberOfFiles });\n      setValues(zeroStateValues);\n      setNumberOfFiles(0);\n    }\n  };\n\n  const removeError = (name: string) => {\n    setErrors({ ...errors, [name]: '' });\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"form__wrapper\">\n        <FormInput\n          title=\"company\"\n          inputClass=\"form__input\"\n          labelClass=\"form__label\"\n          text=\"Your company name\"\n          placeholder=\"Type text\"\n          type=\"text\"\n          optionClass=\"form__option form__option--company\"\n          isRequired={false}\n          error=\"\"\n          errorClass=\"form__error\"\n          removeError={removeError}\n          handleInputChanges={handleInputChanges}\n          value={values.company}\n          handleOnBlur={handleOnBlur}\n        />\n        <FormInput\n          title=\"number\"\n          inputClass={errors.number === '' ? 'form__input' : 'form__input form__input--invalid'}\n          labelClass=\"form__label\"\n          text=\"Number of people \"\n          placeholder=\"1-99\"\n          type=\"text\"\n          optionClass=\"form__option form__option--people\"\n          isRequired\n          error={errors.number}\n          errorClass=\"form__error\"\n          removeError={removeError}\n          handleInputChanges={handleInputChanges}\n          value={values.number}\n          handleOnBlur={handleOnBlur}\n        />\n      </div>\n      <FormInput\n        title=\"business\"\n        inputClass={errors.business === '' ? 'form__input' : 'form__input form__input--invalid'}\n        labelClass=\"form__label\"\n        text=\"Business area\"\n        placeholder=\"Design, Marketing, Development, etc.\"\n        type=\"text\"\n        optionClass=\"form__option\"\n        isRequired\n        error={errors.business}\n        errorClass=\"form__error\"\n        removeError={removeError}\n        handleInputChanges={handleInputChanges}\n        value={values.business}\n        handleOnBlur={handleOnBlur}\n      />\n      <TextArea\n        title=\"description\"\n        inputClass={errors.description === '' ? 'form__text-area' : 'form__text-area form__text-area--invalid'}\n        labelClass=\"form__label\"\n        text=\"Description\"\n        placeholder=\"Type text\"\n        optionClass=\"form__option\"\n        isRequired\n        error={errors.description}\n        errorClass=\"form__error\"\n        removeError={removeError}\n        handleInputChanges={handleInputChanges}\n        value={values.description}\n        handleOnBlur={handleOnBlur}\n      />\n      <FileInput handleFiles={handleFiles} numberOfFiles={numberOfFiles} />\n      <SubmitButton\n        text=\"Submit\"\n        buttonClass=\"form__button\"\n        handleSubmit={handleSubmit}\n      />\n    </form>\n  );\n};\n","import React from 'react';\n\nexport const Steps: React.FC = () => {\n  return (\n    <div className=\"steps\">\n      <span className=\"steps__item steps__item--non-active\">1</span>\n      <span className=\"steps__line\" />\n      <span className=\"steps__item steps__item--non-active\">2</span>\n      <span className=\"steps__line\" />\n      <span className=\"steps__item steps__item--active\">3</span>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { Form } from './components/Form';\nimport { Steps } from './components/Steps';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">Your first project</h1>\n      <Steps />\n      <Form />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}